<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" 
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/context 
	 http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
     
	<context:component-scan base-package="com.xdtech"></context:component-scan>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://192.168.0.137:3306/basedata" />
		<property name="user" value="root" />
		<property name="password" value="123456" />
		<property name="initialPoolSize"><value>5</value></property>
      	<property name="minPoolSize"><value>20</value></property>
      	<property name="maxPoolSize"><value>100</value></property>
      	<property name="acquireIncrement"><value>5</value></property>
      	<property name="maxIdleTime"><value>100</value></property>
	</bean>
	
	
	

	<!--  hibernate.cache.use_second_level_cache=true
                hibernate.cache.use_query_cache=false
                hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLDialect
                hibernate.show_sql=true
                hibernate.format_sql=false
			</value>
		</property>
		<property name="packagesToScan" value="com.xdtech.platform.*.bean"/>
	</bean>
	
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="list*" read-only="true"/>
			<tx:method name="*" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="operation" expression="execution(* com.xdtech.platform..service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="operation" />
	</aop:config>
	<!-- solr HttpSolrServer 注入-->
	<bean id="httpSolrServer" class="org.apache.solr.client.solrj.impl.HttpSolrServer" >
		<constructor-arg index="0" value="http://127.0.0.1:8983">
		</constructor-arg>
		<property name="connectionTimeout" value="1000"/>
		<property name="defaultMaxConnectionsPerHost" value="100"/>
		<property name="maxTotalConnections" value="100"/>
	</bean>
	
	<bean id="dao" class="com.xdtech.platform.core.dao.IDaoManager">
		 <property name="sessionFactory">
	     	<ref bean="sessionFactory"/>
	   	</property>
	</bean>
	<bean id="baseService" abstract="true" class="com.xdtech.platform.core.service.BaseService">
		<property name="dao">
			<ref bean="dao"/>
		</property>
	</bean>
</beans>
